/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulariosMDI;

import daos.CategoriaDAO;
import daos.SubCategoriaDAO;
import entidades.Categoria;
import entidades.SubCategoria;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class Frm_MntoSubCat extends javax.swing.JInternalFrame {

    /**
     * Creates new form Frm_MntoSubCat
     */
    public Frm_MntoSubCat() {
        initComponents();
        CargarC();
        BloquearTabla();
        ListarSubcategorias();
    }
    public void BloquearTabla(){        
        DefaultTableModel dt = new DefaultTableModel()
                {
                    @Override
                    public boolean isCellEditable(int row, int column){
                    return false;
                }
             };        
        tbShowSubCategoria.setModel(dt);
    }
    int[] listaidSubCategoria;
    public void ListarSubcategorias(){
        DefaultTableModel dtm=(DefaultTableModel)this.tbShowSubCategoria.getModel();
        dtm.setColumnCount(0);
        dtm.setRowCount(0);
        SubCategoriaDAO sbcdao = new SubCategoriaDAO();
        ArrayList<SubCategoria> lc = sbcdao.listarEntidad();
        listaidSubCategoria = new int[lc.size()];
        String col[] = {"IdSubCategoria","Nombre","Categoria","Estado"};
        dtm.setColumnIdentifiers(col);
        Object[] row = new Object[dtm.getColumnCount()];        
        for (int i = 0; i < lc.size(); i++) {
            listaidSubCategoria[i] = lc.get(i).getIdSubCategoria();
            row[0] = lc.get(i).getIdSubCategoria();
            row[1] = lc.get(i).getNombre();
            row[2] = lc.get(i).getIdCategoria();
            row[3] = lc.get(i).getEstado();              
            dtm.addRow(row);
        }
    }

    int estado;    
    int[] listaidCategoriaCombo;   
    public void CargarC(){                
        ArrayList<Categoria> c;
        CategoriaDAO sCat = new CategoriaDAO();
        c = sCat.listarEntidad(); 
        listaidCategoriaCombo = new int[c.size()];
        int i=0;        
        for(i=0;i<=c.size()-1;i++){
        cmbCategoria.addItem(c.get(i).getNombre());        
        listaidCategoriaCombo[i] =c.get(i).getIdCategoria();
        }           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        cmbCategoria = new javax.swing.JComboBox<>();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbShowSubCategoria = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Mantenimiento SubCategoria");

        jLabel3.setText("Categoria");

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("MODIFICAR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        tbShowSubCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbShowSubCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbShowSubCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbShowSubCategoria);

        jLabel1.setText("MANTENIMIENTOS SUBCATEGORIA");

        jLabel2.setText("Nombre");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String usu= txtNombre.getText();
        estado = 1;
        usu=usu.replaceAll(" ", "");
        if(usu.length()==0 )
        {
            JOptionPane.showMessageDialog(this,"INGRESE DATOS : NOMBRE de SubCategoria");
        }
        else
        {
            try
            {
                int index = cmbCategoria.getSelectedIndex();
                int id = listaidCategoriaCombo[index];
                SubCategoria subcategoria= new SubCategoria();
                subcategoria.setNombre(txtNombre.getText());
                subcategoria.setIdCategoria(id);
                subcategoria.setEstado(estado);
                SubCategoriaDAO scDAO = new SubCategoriaDAO();
                scDAO.crearEntidad(subcategoria);
                ListarSubcategorias();
                JOptionPane.showMessageDialog(this,"Se Agrego Exitosamente");
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int row = tbShowSubCategoria.getSelectedRow();
        if (row == -1)
        {
            JOptionPane.showMessageDialog(this,"Seleccione un elemento para poder eliminar");
        }
        else
        {
            try
            {
                int fila = tbShowSubCategoria.getSelectedRow();
                int id = listaidSubCategoria[fila];
                SubCategoriaDAO sbdao = new SubCategoriaDAO();
                sbdao.eliminarEntidad(id);
                ListarSubcategorias();
                JOptionPane.showMessageDialog(this,"Se Elimino Exitosamente");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int row = tbShowSubCategoria.getSelectedRow();
        if (row == -1)
        {
            JOptionPane.showMessageDialog(this,"No ha selecionado ningun campo");
        }
        else
        {
            String usu= txtNombre.getText();
            usu=usu.replaceAll(" ", "");
            if(usu.length()==0 )
            {
                JOptionPane.showMessageDialog(this,"INGRESE NOMBRE de SubCategoria");
            }
            else
            {
                try
                {
                    int index = cmbCategoria.getSelectedIndex();
                    int idCat = listaidCategoriaCombo[index];
                    int fila = tbShowSubCategoria.getSelectedRow();
                    int idSubCategoria = listaidSubCategoria[fila];
                    SubCategoria subcategoria = new SubCategoria();
                    subcategoria.setIdSubCategoria(idSubCategoria);
                    subcategoria.setNombre(txtNombre.getText());
                    subcategoria.setIdCategoria(idCat);
                    subcategoria.setEstado(estado);
                    SubCategoriaDAO sbdao = new SubCategoriaDAO();
                    sbdao.actualizarEntidad(subcategoria);
                    ListarSubcategorias();
                    JOptionPane.showMessageDialog(this,"Se Modifico Exitosamente");
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this,e.getMessage());

                }
            }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)||  c==KeyEvent.VK_DELETE || c==KeyEvent.VK_SPACE))
        evt.consume();
    }//GEN-LAST:event_txtNombreKeyTyped

    private void tbShowSubCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbShowSubCategoriaMouseClicked
        int fila = tbShowSubCategoria.getSelectedRow();
        int index = cmbCategoria.getSelectedIndex();
        int idcat = listaidCategoriaCombo[index];
        try
        {
            int id = listaidSubCategoria[fila];
            SubCategoria subcategoria = new SubCategoria();
            SubCategoriaDAO sbdao = new SubCategoriaDAO();
            subcategoria = sbdao.buscarEntidad(id);
            txtNombre.setText(subcategoria.getNombre());
            estado = subcategoria.getEstado();
            ArrayList<Categoria> c;
            CategoriaDAO sCat = new CategoriaDAO();
            c = sCat.listarEntidad();
            int i=0;
            for(i=0;i<=c.size()-1;i++)
            {
                if(listaidCategoriaCombo[i] == subcategoria.getIdCategoria())
                {
                    cmbCategoria.setSelectedIndex(i);
                }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_tbShowSubCategoriaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cmbCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbShowSubCategoria;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
